{"version":3,"sources":["Components/MainBody.module.css","logo.svg","Components/Header.js","Components/UI/LoadingSpinner.js","Components/MainBody.js","App.js","reportWebVitals.js","index.js","Components/Header.module.css","Components/UI/LoadingSpinner.module.css"],"names":["module","exports","Header","className","classes","header","src","logo","alt","LoadingSpinner","spinner","MainBody","useState","cards","setCards","isLoading","setisLoading","httpError","sethttpError","useEffect","fetchCards","a","fetch","response","ok","Error","json","key","responseData","loadedCards","push","id","url","title","catch","error","message","loading","cardsList","map","card","effect","width","height","content","heading","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+IACAA,EAAOC,QAAU,CAAC,eAAe,+BAA+B,OAAS,yBAAyB,QAAU,0BAA0B,MAAQ,wBAAwB,QAAU,0BAA0B,QAAU,0BAA0B,eAAe,iC,2ECD9O,G,YAAA,IAA0B,kC,uBCa1BC,EAVA,WACb,OACE,qBAAKC,UAAWC,IAAQC,OAAxB,SACE,yBAAQF,UAAWC,IAAQ,kBAA3B,UACE,qBAAKE,IAAKC,EAAMJ,UAAWC,IAAQ,eAAgBI,IAAI,SACvD,oCAAM,0CAAN,kB,8DCFOC,EAJQ,WACrB,OAAO,qBAAKN,UAAWC,IAAQM,W,QC0ElBC,G,MAvEE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAiCA,GA/BAC,qBAAU,WACR,IAAMC,EAAU,uCAAG,kCAAAC,EAAA,sEACMC,MACrB,+CAFe,WACXC,EADW,QAKHC,GALG,sBAMT,IAAIC,MAAM,iDAND,uBASUF,EAASG,OATnB,OAYjB,IAAWC,KAHLC,EATW,OAWXC,EAAc,GACFD,EAChBC,EAAYC,KAAK,CACfH,IAAKA,EACLI,GAAIH,EAAaD,GAAKI,GACtBC,IAAKJ,EAAaD,GAAKK,IACvBC,MAAOL,EAAaD,GAAKM,QAG7BnB,EAASe,GACTb,GAAa,GArBI,4CAAH,qDAwBhBI,IAAac,OAAM,SAACC,GAClBnB,GAAa,GACbE,EAAaiB,EAAMC,cAEpB,IAECrB,EACF,OACE,kCACE,cAAC,EAAD,CAAgBZ,UAAWC,IAAQiC,YAKzC,GAAIpB,EACF,OACE,kCACE,mBAAGd,UAAWC,IAAQ+B,MAAtB,SAA8BlB,MAKpC,IAAMqB,EAAYzB,EAAM0B,KAAI,SAACC,GAAD,OAC1B,qBAAmBrC,UAAWC,IAAO,OAArC,UACE,cAAC,gBAAD,CACEqC,OAAO,OACPnC,IAAKkC,EAAKR,IACVxB,IAAI,MACJkC,MAAM,OACNC,OAAO,SAET,qBAAIxC,UAAWC,IAAQwC,QAAvB,UACE,oBAAIzC,UAAWC,IAAQyC,QAAvB,SAAiCL,EAAKT,KACtC,mBAAG5B,UAAWC,IAAQ,gBAAtB,SAAwCoC,EAAKP,aAVxCO,EAAKb,QAehB,OAAO,sBAAMxB,UAAWC,IAAQ,gBAAzB,SAA2CkC,MC7DrCQ,MATf,WACE,OACE,sBAAK3C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCIS4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA/C,EAAOC,QAAU,CAAC,OAAS,uBAAuB,iBAAiB,+BAA+B,cAAc,4BAA4B,mBAAmB,mC,kBCA/JD,EAAOC,QAAU,CAAC,QAAU,mC","file":"static/js/main.3c045846.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-content\":\"MainBody_page-content__QFnPU\",\"d_card\":\"MainBody_d_card__nlOxp\",\"loading\":\"MainBody_loading__PwWgp\",\"error\":\"MainBody_error__3tWMt\",\"content\":\"MainBody_content__2CWMh\",\"heading\":\"MainBody_heading__OMSPA\",\"data-content\":\"MainBody_data-content__2EFrB\"};","export default __webpack_public_path__ + \"static/media/logo.4a035159.svg\";","import logo from '../logo.svg'\r\nimport classes from './Header.module.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={classes.header}>\r\n      <header className={classes['header-content']}>\r\n        <img src={logo} className={classes['header-logo']} alt=\"logo\" />\r\n        <h2>GI<span>‚ÖÅ</span>A CARS</h2>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;","import classes from './LoadingSpinner.module.css';\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n}\r\n\r\nexport default LoadingSpinner;","import classes from './MainBody.module.css';\r\nimport { useEffect, useState } from 'react';\r\nimport LoadingSpinner from './UI/LoadingSpinner';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst MainBody = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [httpError, sethttpError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCards = async () => {\r\n      const response = await fetch(\r\n        'https://jsonplaceholder.typicode.com/photos'\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Something Went Wrong! Please try again later.');\r\n      }\r\n\r\n      const responseData = await response.json();\r\n\r\n      const loadedCards = [];\r\n      for (const key in responseData) {\r\n        loadedCards.push({\r\n          key: key,\r\n          id: responseData[key].id,\r\n          url: responseData[key].url,\r\n          title: responseData[key].title,\r\n        });\r\n      }\r\n      setCards(loadedCards);\r\n      setisLoading(false);\r\n    };\r\n\r\n    fetchCards().catch((error) => {\r\n      setisLoading(false);\r\n      sethttpError(error.message);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <LoadingSpinner className={classes.loading} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p className={classes.error}>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const cardsList = cards.map((card) => (\r\n    <ul key={card.key} className={classes['d_card']}>\r\n      <LazyLoadImage\r\n        effect=\"blur\"\r\n        src={card.url}\r\n        alt=\"alt\"\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n      />\r\n      <li className={classes.content}>\r\n        <h2 className={classes.heading}>{card.id}</h2>\r\n        <p className={classes['data-content']}>{card.title}</p>\r\n      </li>\r\n    </ul>\r\n  ));\r\n\r\n  return <main className={classes['page-content']}>{cardsList}</main>;\r\n};\r\n\r\nexport default MainBody;\r\n","import './App.css';\nimport Header from './Components/Header';\nimport MainBody from './Components/MainBody';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <MainBody/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3tFrN\",\"header-content\":\"Header_header-content__2GYoD\",\"header-logo\":\"Header_header-logo__35HaG\",\"header-logo-spin\":\"Header_header-logo-spin__3Xybm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2gZuX\"};"],"sourceRoot":""}